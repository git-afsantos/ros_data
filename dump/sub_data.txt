SubscribeTuple(topic='/torso/joint_states', queue_size=1, callback='jointstateCallback', message_type='sensor_msgs::JointState', nesting=0, variable='joint_state_sub_', function='KinematicExtensionTorso', line=98, overload='subscribe(string topic, uint32_t queue_size, void method(M), T *obj, TransportHints)', transport_hints=False, param_topic=False, param_queue=False)
SubscribeTuple(topic='/torso/joint_states', queue_size=1, callback='jointstateCallback', message_type='sensor_msgs::JointState', nesting=0, variable='joint_state_sub_', function='KinematicExtensionTorso', line=98, overload='subscribe(string topic, uint32_t queue_size, void method(M), T *obj, TransportHints)', transport_hints=False, param_topic=False, param_queue=False)
SubscribeTuple(topic='goal_pos', queue_size=1000, callback='chatterCallback', message_type='aubo_msgs::GoalPoint', nesting=0, variable='sub1', function='main', line=116, overload='subscribe(string topic, uint32_t queue_size, void function(M), TransportHints)', transport_hints=False, param_topic=False, param_queue=False)
SubscribeTuple(topic='input/analog_sensors', queue_size=10, callback='analogPhidgetSignalsCallback', message_type='cob_phidgets::AnalogSensor', nesting=0, variable='topicSub_AnalogInputs', function='cob_voltage_control_ros', line=55, overload='subscribe(string topic, uint32_t queue_size, void method(M), T *obj, TransportHints)', transport_hints=False, param_topic=False, param_queue=False)
SubscribeTuple(topic='input/digital_sensors', queue_size=10, callback='digitalPhidgetSignalsCallback', message_type='cob_phidgets::DigitalSensor', nesting=0, variable='topicSub_DigitalInputs', function='cob_voltage_control_ros', line=56, overload='subscribe(string topic, uint32_t queue_size, void method(M), T *obj, TransportHints)', transport_hints=False, param_topic=False, param_queue=False)
SubscribeTuple(topic='debug/mode_shift', queue_size=10, callback='debugCb', message_type='std_msgs::String', nesting=0, variable='debug_', function='init', line=57, overload='subscribe(string topic, uint32_t queue_size, void method(M), T *obj, TransportHints)', transport_hints=False, param_topic=False, param_queue=False)
SubscribeTuple(topic='depth/image_rect', queue_size=1, callback='imagecb', message_type='sensor_msgs::Image', nesting=0, variable='sub_', function='onInit', line=113, overload='subscribe(string topic, uint32_t queue_size, void method(M), T *obj, TransportHints)', transport_hints=False, param_topic=False, param_queue=False)
SubscribeTuple(topic='robotiq_force_torque_sensor', queue_size=100, callback='reCallback', message_type='robotiq_force_torque_sensor::ft_sensor', nesting=0, variable='sub1', function='main', line=72, overload='subscribe(string topic, uint32_t queue_size, void function(M), TransportHints)', transport_hints=False, param_topic=False, param_queue=False)
SubscribeTuple(topic=[std::string] #full_topic, queue_size=10, callback='jointstatesCallback', message_type='sensor_msgs::JointState', nesting=0, variable='cyberglove_jointstates_sub', function='ShadowhandToCybergloveRemapper', line=66, overload='subscribe(string topic, uint32_t queue_size, void method(M), T *obj, TransportHints)', transport_hints=False, param_topic=False, param_queue=False)
SubscribeTuple(topic=[std::string] #full_topic, queue_size=10, callback='jointstatesCallback', message_type='sensor_msgs::JointState', nesting=0, variable='cyberglove_jointstates_sub', function='ShadowhandToCybergloveRemapper', line=66, overload='subscribe(string topic, uint32_t queue_size, void method(M), T *obj, TransportHints)', transport_hints=False, param_topic=False, param_queue=False)
SubscribeTuple(topic='joint_command', queue_size=1, callback='topicCallback_JointStateCmd', message_type='control_msgs::JointTrajectoryControllerState', nesting=0, variable='topicSub_JointStateCmd', function='NodeClass', line=250, overload='subscribe(string topic, uint32_t queue_size, void method(M), T *obj, TransportHints)', transport_hints=False, param_topic=False, param_queue=False)
SubscribeTuple(topic='/joint_states', queue_size=1, callback='gazebo_joint_states_Callback', message_type='sensor_msgs::JointState', nesting=0, variable='topicSub_GazeboJointStates', function='NodeClass', line=234, overload='subscribe(string topic, uint32_t queue_size, void method(M), T *obj, TransportHints)', transport_hints=False, param_topic=False, param_queue=False)
SubscribeTuple(topic='joint_command', queue_size=1, callback='topicCallback_JointStateCmd', message_type='control_msgs::JointTrajectoryControllerState', nesting=0, variable='topicSub_JointStateCmd', function='NodeClass', line=250, overload='subscribe(string topic, uint32_t queue_size, void method(M), T *obj, TransportHints)', transport_hints=False, param_topic=False, param_queue=False)
SubscribeTuple(topic='sent_messages', queue_size=10, callback='function', message_type='boost::function<void (const boost::shared_ptr<const Frame_<allocator<void> > > &)>', nesting=0, variable='can_topic_', function='TopicToSocketCAN', line=37, overload='subscribe(string topic, uint32_t queue_size, void boost::function(M), VoidConstPtr, TransportHints)', transport_hints=False, param_topic=False, param_queue=False)
SubscribeTuple(topic='/torso/joint_states', queue_size=1, callback='jointstateCallback', message_type='sensor_msgs::JointState', nesting=0, variable='joint_state_sub_', function='KinematicExtensionTorso', line=98, overload='subscribe(string topic, uint32_t queue_size, void method(M), T *obj, TransportHints)', transport_hints=False, param_topic=False, param_queue=False)
SubscribeTuple(topic='/torso/joint_states', queue_size=1, callback='jointstateCallback', message_type='sensor_msgs::JointState', nesting=0, variable='joint_state_sub_', function='KinematicExtensionTorso', line=98, overload='subscribe(string topic, uint32_t queue_size, void method(M), T *obj, TransportHints)', transport_hints=False, param_topic=False, param_queue=False)
SubscribeTuple(topic='/torso/joint_states', queue_size=1, callback='jointstateCallback', message_type='sensor_msgs::JointState', nesting=0, variable='joint_state_sub_', function='KinematicExtensionTorso', line=98, overload='subscribe(string topic, uint32_t queue_size, void method(M), T *obj, TransportHints)', transport_hints=False, param_topic=False, param_queue=False)
SubscribeTuple(topic='joy', queue_size=10, callback='joyCallback', message_type='sensor_msgs::Joy', nesting=0, variable='joy_sub_', function='JoyOp', line=73, overload='subscribe(string topic, uint32_t queue_size, void method(M), T *obj, TransportHints)', transport_hints=False, param_topic=False, param_queue=False)
SubscribeTuple(topic=[std::string] #odometry_topic_, queue_size=1, callback='processOdometry', message_type='nav_msgs::Odometry', nesting=0, variable='sub_odom_', function='init', line=29, overload='subscribe(string topic, uint32_t queue_size, void method(M), T *obj, TransportHints)', transport_hints=False, param_topic=False, param_queue=False)
SubscribeTuple(topic=[std::string] #sub_waypointlist_topic_, queue_size=1, callback='processWaypointList', message_type='yocs_msgs::WaypointList', nesting=0, variable='sub_waypointlist_', function='init', line=44, overload='subscribe(string topic, uint32_t queue_size, void method(M), T *obj, TransportHints)', transport_hints=False, param_topic=False, param_queue=False)
SubscribeTuple(topic='say', queue_size=1, callback='topic_cb_say', message_type='std_msgs::String', nesting=0, variable='sub_say_', function='SoundAction', line=54, overload='subscribe(string topic, uint32_t queue_size, void method(M), T *obj, TransportHints)', transport_hints=False, param_topic=False, param_queue=False)
SubscribeTuple(topic='play', queue_size=1, callback='topic_cb_play', message_type='std_msgs::String', nesting=0, variable='sub_play_', function='SoundAction', line=55, overload='subscribe(string topic, uint32_t queue_size, void method(M), T *obj, TransportHints)', transport_hints=False, param_topic=False, param_queue=False)
SubscribeTuple(topic='joint_path_command', queue_size=0, callback='jointTrajectoryCB', message_type='trajectory_msgs::JointTrajectory', nesting=0, variable='sub_joint_trajectory_', function='init', line=124, overload='subscribe(string topic, uint32_t queue_size, void method(M), T *obj, TransportHints)', transport_hints=False, param_topic=False, param_queue=False)
SubscribeTuple(topic='joint_states', queue_size=1, callback='jointStateCB', message_type='sensor_msgs::JointState', nesting=0, variable='sub_cur_pos_', function='init', line=126, overload='subscribe(string topic, uint32_t queue_size, void method(M), T *obj, TransportHints)', transport_hints=False, param_topic=False, param_queue=False)
SubscribeTuple(topic='joint_path_command', queue_size=0, callback='jointTrajectoryExCB', message_type='motoman_msgs::DynamicJointTrajectory', nesting=0, variable='sub_joint_trajectory_', function='init', line=150, overload='subscribe(string topic, uint32_t queue_size, void method(M), T *obj, TransportHints)', transport_hints=False, param_topic=False, param_queue=False)
SubscribeTuple(topic=[basic_string<char, std::char_traits<char>, std::allocator<char> >] operator+([basic_string<char, std::char_traits<char>, std::allocator<char> >] operator+([basic_string<char, std::char_traits<char>, std::allocator<char> >] operator+(#ns_str, /), #name_str), /joint_path_command), queue_size=0, callback='jointTrajectoryExCB', message_type='motoman_msgs::DynamicJointTrajectory', nesting=1, variable='sub_joint_trajectory', function='init', line=172, overload='subscribe(string topic, uint32_t queue_size, void method(M), T *obj, TransportHints)', transport_hints=False, param_topic=False, param_queue=False)
SubscribeTuple(topic=[basic_string<char, std::char_traits<char>, std::allocator<char> >] operator+([basic_string<char, std::char_traits<char>, std::allocator<char> >] operator+([basic_string<char, std::char_traits<char>, std::allocator<char> >] operator+(#ns_str, /), #name_str), /joint_states), queue_size=1, callback='function', message_type='boost::function<void (const boost::shared_ptr<const JointState_<allocator<void> > > &)>', nesting=1, variable='sub_cur_pos_', function='init', line=180, overload='subscribe(string topic, uint32_t queue_size, void boost::function(M), VoidConstPtr, TransportHints)', transport_hints=False, param_topic=False, param_queue=False)
SubscribeTuple(topic='joint_path_command', queue_size=0, callback='jointTrajectoryCB', message_type='trajectory_msgs::JointTrajectory', nesting=0, variable='sub_joint_trajectory_', function='init', line=124, overload='subscribe(string topic, uint32_t queue_size, void method(M), T *obj, TransportHints)', transport_hints=False, param_topic=False, param_queue=False)
SubscribeTuple(topic='joint_states', queue_size=1, callback='jointStateCB', message_type='sensor_msgs::JointState', nesting=0, variable='sub_cur_pos_', function='init', line=126, overload='subscribe(string topic, uint32_t queue_size, void method(M), T *obj, TransportHints)', transport_hints=False, param_topic=False, param_queue=False)
SubscribeTuple(topic='joint_path_command', queue_size=0, callback='jointTrajectoryExCB', message_type='motoman_msgs::DynamicJointTrajectory', nesting=0, variable='sub_joint_trajectory_', function='init', line=150, overload='subscribe(string topic, uint32_t queue_size, void method(M), T *obj, TransportHints)', transport_hints=False, param_topic=False, param_queue=False)
SubscribeTuple(topic=[basic_string<char, std::char_traits<char>, std::allocator<char> >] operator+([basic_string<char, std::char_traits<char>, std::allocator<char> >] operator+([basic_string<char, std::char_traits<char>, std::allocator<char> >] operator+(#ns_str, /), #name_str), /joint_path_command), queue_size=0, callback='jointTrajectoryExCB', message_type='motoman_msgs::DynamicJointTrajectory', nesting=1, variable='sub_joint_trajectory', function='init', line=172, overload='subscribe(string topic, uint32_t queue_size, void method(M), T *obj, TransportHints)', transport_hints=False, param_topic=False, param_queue=False)
SubscribeTuple(topic=[basic_string<char, std::char_traits<char>, std::allocator<char> >] operator+([basic_string<char, std::char_traits<char>, std::allocator<char> >] operator+([basic_string<char, std::char_traits<char>, std::allocator<char> >] operator+(#ns_str, /), #name_str), /joint_states), queue_size=1, callback='function', message_type='boost::function<void (const boost::shared_ptr<const JointState_<allocator<void> > > &)>', nesting=1, variable='sub_cur_pos_', function='init', line=180, overload='subscribe(string topic, uint32_t queue_size, void boost::function(M), VoidConstPtr, TransportHints)', transport_hints=False, param_topic=False, param_queue=False)
SubscribeTuple(topic=[basic_string<char, std::char_traits<char>, std::allocator<char> >] operator+(#joint_path_action_name, /feedback_states), queue_size=1, callback='function', message_type='boost::function<void (const boost::shared_ptr<const FollowJointTrajectoryFeedback_<allocator<void> > > &)>', nesting=1, variable='sub_trajectory_state_', function='JointTrajectoryAction', line=85, overload='subscribe(string topic, uint32_t queue_size, void boost::function(M), VoidConstPtr, TransportHints)', transport_hints=False, param_topic=False, param_queue=False)
SubscribeTuple(topic='robot_status', queue_size=1, callback='robotStatusCB', message_type='industrial_msgs::RobotStatus', nesting=1, variable='sub_robot_status_', function='JointTrajectoryAction', line=89, overload='subscribe(string topic, uint32_t queue_size, void method(M), T *obj, TransportHints)', transport_hints=False, param_topic=False, param_queue=False)
SubscribeTuple(topic='enable', queue_size=10, callback='enableCB', message_type='std_msgs::String', nesting=0, variable='enable_controller_subscriber_', function='init', line=214, overload='subscribe(string topic, uint32_t queue_size, void method(M), T *obj, TransportHints)', transport_hints=False, param_topic=False, param_queue=False)
SubscribeTuple(topic='disable', queue_size=10, callback='disableCB', message_type='std_msgs::Empty', nesting=0, variable='disable_controller_subscriber_', function='init', line=215, overload='subscribe(string topic, uint32_t queue_size, void method(M), T *obj, TransportHints)', transport_hints=False, param_topic=False, param_queue=False)
SubscribeTuple(topic='control_max_vel', queue_size=10, callback='controlMaxVelCB', message_type='std_msgs::Float32', nesting=0, variable='control_velocity_subscriber_', function='init', line=216, overload='subscribe(string topic, uint32_t queue_size, void method(M), T *obj, TransportHints)', transport_hints=False, param_topic=False, param_queue=False)
SubscribeTuple(topic=[basic_string<char, std::char_traits<char>, std::allocator<char> >] operator+([basic_string<char, std::char_traits<char>, std::allocator<char> >] operator+([basic_string<char, std::char_traits<char>, std::allocator<char> >] operator+(sh_, #parent_name), #controller_type), /state), queue_size=2, callback='callback', message_type='control_msgs::JointControllerState', nesting=0, variable='sub', function='main', line=111, overload='subscribe(string topic, uint32_t queue_size, void function(M), TransportHints)', transport_hints=False, param_topic=False, param_queue=False)
SubscribeTuple(topic=[const std::string] #e_stop_topic, queue_size=1, callback='eStopCB', message_type='std_msgs::Bool', nesting=1, variable='e_stop_sub_', function='Load', line=143, overload='subscribe(string topic, uint32_t queue_size, void method(M), T *obj, TransportHints)', transport_hints=False, param_topic=False, param_queue=False)
SubscribeTuple(topic=[const std::string] #state_valid_topic, queue_size=1, callback='stateValidCB', message_type='std_msgs::Bool', nesting=1, variable='state_valid_sub_', function='Load', line=151, overload='subscribe(string topic, uint32_t queue_size, void method(M), T *obj, TransportHints)', transport_hints=False, param_topic=False, param_queue=False)
SubscribeTuple(topic='odom', queue_size=100, callback='odomCb', message_type='nav_msgs::Odometry', nesting=0, variable='sub_odom', function='init', line=78, overload='subscribe(string topic, uint32_t queue_size, void method(M), T *obj, TransportHints)', transport_hints=False, param_topic=False, param_queue=False)
SubscribeTuple(topic='command', queue_size=1, callback='topicCallbackTwistCmd', message_type='geometry_msgs::Twist', nesting=0, variable='topic_sub_CMD_pltf_twist_', function='NodeClass', line=215, overload='subscribe(string topic, uint32_t queue_size, void method(M), T *obj, TransportHints)', transport_hints=False, param_topic=False, param_queue=False)
SubscribeTuple(topic='/emergency_stop_state', queue_size=1, callback='topicCallbackEMStop', message_type='cob_msgs::EmergencyStopState', nesting=0, variable='topic_sub_EM_stop_state_', function='NodeClass', line=216, overload='subscribe(string topic, uint32_t queue_size, void method(M), T *obj, TransportHints)', transport_hints=False, param_topic=False, param_queue=False)
SubscribeTuple(topic='diagnostic', queue_size=1, callback='topicCallbackDiagnostic', message_type='diagnostic_msgs::DiagnosticStatus', nesting=0, variable='topic_sub_drive_diagnostic_', function='NodeClass', line=217, overload='subscribe(string topic, uint32_t queue_size, void method(M), T *obj, TransportHints)', transport_hints=False, param_topic=False, param_queue=False)
SubscribeTuple(topic='state', queue_size=1, callback='topicCallbackJointControllerStates', message_type='control_msgs::JointTrajectoryControllerState', nesting=0, variable='topic_sub_joint_controller_states_', function='NodeClass', line=222, overload='subscribe(string topic, uint32_t queue_size, void method(M), T *obj, TransportHints)', transport_hints=False, param_topic=False, param_queue=False)
SubscribeTuple(topic=[string] #topic, queue_size=1, callback='digitalOutputCommandCB', message_type='sr_ronex_msgs::BoolArray', nesting=0, variable='sub_digital_output_command_', function='construct', line=112, overload='subscribe(string topic, uint32_t queue_size, void method(M), T *obj, TransportHints)', transport_hints=False, param_topic=False, param_queue=False)
SubscribeTuple(topic=[string] #topic, queue_size=1, callback='analogOutputCommandCB', message_type='std_msgs::UInt16MultiArray', nesting=0, variable='sub_analog_output_command_', function='construct', line=120, overload='subscribe(string topic, uint32_t queue_size, void method(M), T *obj, TransportHints)', transport_hints=False, param_topic=False, param_queue=False)
SubscribeTuple(topic=[string] #topic, queue_size=1, callback='PWMOutputCommandCB', message_type='std_msgs::UInt16MultiArray', nesting=0, variable='sub_PWM_output_command_', function='construct', line=127, overload='subscribe(string topic, uint32_t queue_size, void method(M), T *obj, TransportHints)', transport_hints=False, param_topic=False, param_queue=False)
SubscribeTuple(topic='/rbcar/joint_states', queue_size=1, callback='jointStateCallback', message_type='sensor_msgs::JointState', nesting=0, variable='joint_state_sub_', function='RbcarControllerClass', line=264, overload='subscribe(string topic, uint32_t queue_size, void method(M), T *obj, TransportHints)', transport_hints=False, param_topic=False, param_queue=False)
SubscribeTuple(topic='/imu_data', queue_size=1, callback='imuCallback', message_type='sensor_msgs::Imu', nesting=0, variable='imu_sub_', function='RbcarControllerClass', line=267, overload='subscribe(string topic, uint32_t queue_size, void method(M), T *obj, TransportHints)', transport_hints=False, param_topic=False, param_queue=False)
SubscribeTuple(topic='command', queue_size=1, callback='commandCallback', message_type='ackermann_msgs::AckermannDriveStamped', nesting=0, variable='cmd_sub_', function='RbcarControllerClass', line=278, overload='subscribe(string topic, uint32_t queue_size, void method(M), T *obj, TransportHints)', transport_hints=False, param_topic=False, param_queue=False)
SubscribeTuple(topic='/summit_xl/joint_states', queue_size=1, callback='jointStateCallback', message_type='sensor_msgs::JointState', nesting=0, variable='joint_state_sub_', function='SummitXLControllerClass', line=342, overload='subscribe(string topic, uint32_t queue_size, void method(M), T *obj, TransportHints)', transport_hints=False, param_topic=False, param_queue=False)
SubscribeTuple(topic='/summit_xl/imu_data', queue_size=1, callback='imuCallback', message_type='sensor_msgs::Imu', nesting=0, variable='imu_sub_', function='SummitXLControllerClass', line=345, overload='subscribe(string topic, uint32_t queue_size, void method(M), T *obj, TransportHints)', transport_hints=False, param_topic=False, param_queue=False)
SubscribeTuple(topic='command', queue_size=1, callback='commandCallback', message_type='geometry_msgs::Twist', nesting=0, variable='cmd_sub_', function='SummitXLControllerClass', line=367, overload='subscribe(string topic, uint32_t queue_size, void method(M), T *obj, TransportHints)', transport_hints=False, param_topic=False, param_queue=False)
SubscribeTuple(topic='command_ptz', queue_size=1, callback='command_ptzCallback', message_type='robotnik_msgs::ptz', nesting=0, variable='ptz_sub_', function='SummitXLControllerClass', line=370, overload='subscribe(string topic, uint32_t queue_size, void method(M), T *obj, TransportHints)', transport_hints=False, param_topic=False, param_queue=False)
SubscribeTuple(topic='/joint_states', queue_size=1, callback='jointStateCallback', message_type='sensor_msgs::JointState', nesting=0, variable='joint_state_sub_', function='SummitXLControllerClass', line=346, overload='subscribe(string topic, uint32_t queue_size, void method(M), T *obj, TransportHints)', transport_hints=False, param_topic=False, param_queue=False)
SubscribeTuple(topic='/imu/data', queue_size=1, callback='imuCallback', message_type='sensor_msgs::Imu', nesting=0, variable='imu_sub_', function='SummitXLControllerClass', line=349, overload='subscribe(string topic, uint32_t queue_size, void method(M), T *obj, TransportHints)', transport_hints=False, param_topic=False, param_queue=False)
SubscribeTuple(topic='/summit_xl_control/cmd_vel', queue_size=1, callback='commandCallback', message_type='geometry_msgs::Twist', nesting=0, variable='cmd_sub_', function='SummitXLControllerClass', line=367, overload='subscribe(string topic, uint32_t queue_size, void method(M), T *obj, TransportHints)', transport_hints=False, param_topic=False, param_queue=False)
SubscribeTuple(topic='/axis_camera/ptz_command', queue_size=1, callback='command_ptzCallback', message_type='robotnik_msgs::ptz', nesting=0, variable='ptz_sub_', function='SummitXLControllerClass', line=370, overload='subscribe(string topic, uint32_t queue_size, void method(M), T *obj, TransportHints)', transport_hints=False, param_topic=False, param_queue=False)
SubscribeTuple(topic='/guardian_node/command', queue_size=1, callback='cmdCallback', message_type='geometry_msgs::Twist', nesting=0, variable='cmd_sub_', function='main', line=433, overload='subscribe(string topic, uint32_t queue_size, void function(M), TransportHints)', transport_hints=False, param_topic=False, param_queue=False)
SubscribeTuple(topic='/imu/data', queue_size=1, callback='imuCallback', message_type='sensor_msgs::Imu', nesting=0, variable='imu_sub_', function='main', line=434, overload='subscribe(string topic, uint32_t queue_size, void function(M), TransportHints)', transport_hints=False, param_topic=False, param_queue=False)
SubscribeTuple(topic='command', queue_size=1, callback='cmdCallback', message_type='geometry_msgs::Twist', nesting=0, variable='cmd_sub_', function='main', line=427, overload='subscribe(string topic, uint32_t queue_size, void function(M), TransportHints)', transport_hints=False, param_topic=False, param_queue=False)
SubscribeTuple(topic='/imu/data', queue_size=1, callback='imuCallback', message_type='sensor_msgs::Imu', nesting=1, variable='imu_sub_', function='main', line=429, overload='subscribe(string topic, uint32_t queue_size, void function(M), TransportHints)', transport_hints=False, param_topic=False, param_queue=False)
SubscribeTuple(topic='/guardian/joint_states', queue_size=1, callback='jointStateCallback', message_type='sensor_msgs::JointState', nesting=0, variable='joint_state_sub_', function='GuardianControllerClass', line=294, overload='subscribe(string topic, uint32_t queue_size, void method(M), T *obj, TransportHints)', transport_hints=False, param_topic=False, param_queue=False)
SubscribeTuple(topic='/guardian/imu_data', queue_size=1, callback='imuCallback', message_type='sensor_msgs::Imu', nesting=0, variable='imu_sub_', function='GuardianControllerClass', line=297, overload='subscribe(string topic, uint32_t queue_size, void method(M), T *obj, TransportHints)', transport_hints=False, param_topic=False, param_queue=False)
SubscribeTuple(topic='command', queue_size=1, callback='commandCallback', message_type='geometry_msgs::Twist', nesting=0, variable='cmd_sub_', function='GuardianControllerClass', line=309, overload='subscribe(string topic, uint32_t queue_size, void method(M), T *obj, TransportHints)', transport_hints=False, param_topic=False, param_queue=False)
SubscribeTuple(topic='command_ptz', queue_size=1, callback='command_ptzCallback', message_type='robotnik_msgs::ptz', nesting=0, variable='ptz_sub_', function='GuardianControllerClass', line=312, overload='subscribe(string topic, uint32_t queue_size, void method(M), T *obj, TransportHints)', transport_hints=False, param_topic=False, param_queue=False)
SubscribeTuple(topic='/agvs/joint_states', queue_size=1, callback='jointStateCallback', message_type='sensor_msgs::JointState', nesting=0, variable='joint_state_sub_', function='AGVSControllerClass', line=261, overload='subscribe(string topic, uint32_t queue_size, void method(M), T *obj, TransportHints)', transport_hints=False, param_topic=False, param_queue=False)
SubscribeTuple(topic=[std::string] #imu_topic_, queue_size=1, callback='imuCallback', message_type='sensor_msgs::Imu', nesting=0, variable='imu_sub_', function='AGVSControllerClass', line=268, overload='subscribe(string topic, uint32_t queue_size, void method(M), T *obj, TransportHints)', transport_hints=False, param_topic=True, param_queue=False)
SubscribeTuple(topic='command', queue_size=1, callback='commandCallback', message_type='ackermann_msgs::AckermannDriveStamped', nesting=0, variable='cmd_sub_', function='AGVSControllerClass', line=278, overload='subscribe(string topic, uint32_t queue_size, void method(M), T *obj, TransportHints)', transport_hints=False, param_topic=False, param_queue=False)
SubscribeTuple(topic='obstacle_distance', queue_size=1, callback='obstacleDistancesCallback', message_type='cob_control_msgs::ObstacleDistances', nesting=0, variable='obstacle_distances_sub_', function='init', line=53, overload='subscribe(string topic, uint32_t queue_size, void method(M), T *obj, TransportHints)', transport_hints=False, param_topic=False, param_queue=False)
SubscribeTuple(topic='scan_in', queue_size=1, callback='scanCallback', message_type='sensor_msgs::LaserScan', nesting=0, variable='topicSub_laser_scan_raw', function='NodeClass', line=87, overload='subscribe(string topic, uint32_t queue_size, void method(M), T *obj, TransportHints)', transport_hints=False, param_topic=False, param_queue=False)
SubscribeTuple(topic=[std::string] #full_topic, queue_size=2, callback='sendupdateCallback', message_type='sr_robot_msgs::sendupdate', nesting=0, variable='sendupdate_sub', function='init', line=70, overload='subscribe(string topic, uint32_t queue_size, void method(M), T *obj, TransportHints)', transport_hints=False, param_topic=False, param_queue=False)
SubscribeTuple(topic=[std::string] #full_topic, queue_size=2, callback='contrlrCallback', message_type='sr_robot_msgs::contrlr', nesting=0, variable='contrlr_sub', function='init', line=74, overload='subscribe(string topic, uint32_t queue_size, void method(M), T *obj, TransportHints)', transport_hints=False, param_topic=False, param_queue=False)
SubscribeTuple(topic=[std::string] #full_topic, queue_size=2, callback='configCallback', message_type='sr_robot_msgs::config', nesting=0, variable='config_sub', function='init', line=78, overload='subscribe(string topic, uint32_t queue_size, void method(M), T *obj, TransportHints)', transport_hints=False, param_topic=False, param_queue=False)
SubscribeTuple(topic=[basic_string<char, std::char_traits<char>, std::allocator<char> >] operator+(sh_, [std::basic_string<char>] to_lower_copy([basic_string<char, std::char_traits<char>, std::allocator<char> >] operator+(#first, _position_controller/command), [const std::locale] (default))), queue_size=2, callback='function', message_type='boost::function<void (const boost::shared_ptr<const Float64_<allocator<void> > > &)>', nesting=0, variable=None, function='init', line=84, overload='subscribe(string topic, uint32_t queue_size, void boost::function(M), VoidConstPtr, TransportHints)', transport_hints=False, param_topic=False, param_queue=False)
SubscribeTuple(topic=[std::string] #full_topic, queue_size=2, callback='sendupdateCallback', message_type='sr_robot_msgs::sendupdate', nesting=0, variable='sendupdate_sub', function='init', line=70, overload='subscribe(string topic, uint32_t queue_size, void method(M), T *obj, TransportHints)', transport_hints=False, param_topic=False, param_queue=False)
SubscribeTuple(topic=[std::string] #full_topic, queue_size=2, callback='contrlrCallback', message_type='sr_robot_msgs::contrlr', nesting=0, variable='contrlr_sub', function='init', line=74, overload='subscribe(string topic, uint32_t queue_size, void method(M), T *obj, TransportHints)', transport_hints=False, param_topic=False, param_queue=False)
SubscribeTuple(topic=[std::string] #full_topic, queue_size=2, callback='configCallback', message_type='sr_robot_msgs::config', nesting=0, variable='config_sub', function='init', line=78, overload='subscribe(string topic, uint32_t queue_size, void method(M), T *obj, TransportHints)', transport_hints=False, param_topic=False, param_queue=False)
SubscribeTuple(topic=[basic_string<char, std::char_traits<char>, std::allocator<char> >] operator+(sh_, [std::basic_string<char>] to_lower_copy([basic_string<char, std::char_traits<char>, std::allocator<char> >] operator+(#first, _position_controller/command), [const std::locale] (default))), queue_size=2, callback='function', message_type='boost::function<void (const boost::shared_ptr<const Float64_<allocator<void> > > &)>', nesting=0, variable=None, function='init', line=84, overload='subscribe(string topic, uint32_t queue_size, void boost::function(M), VoidConstPtr, TransportHints)', transport_hints=False, param_topic=False, param_queue=False)
SubscribeTuple(topic=[std::string] #full_topic, queue_size=2, callback='sendupdateCallback', message_type='sr_robot_msgs::sendupdate', nesting=0, variable='sendupdate_sub', function='init', line=70, overload='subscribe(string topic, uint32_t queue_size, void method(M), T *obj, TransportHints)', transport_hints=False, param_topic=False, param_queue=False)
SubscribeTuple(topic=[std::string] #full_topic, queue_size=2, callback='contrlrCallback', message_type='sr_robot_msgs::contrlr', nesting=0, variable='contrlr_sub', function='init', line=74, overload='subscribe(string topic, uint32_t queue_size, void method(M), T *obj, TransportHints)', transport_hints=False, param_topic=False, param_queue=False)
SubscribeTuple(topic=[std::string] #full_topic, queue_size=2, callback='configCallback', message_type='sr_robot_msgs::config', nesting=0, variable='config_sub', function='init', line=78, overload='subscribe(string topic, uint32_t queue_size, void method(M), T *obj, TransportHints)', transport_hints=False, param_topic=False, param_queue=False)
SubscribeTuple(topic=[basic_string<char, std::char_traits<char>, std::allocator<char> >] operator+(sh_, [std::basic_string<char>] to_lower_copy([basic_string<char, std::char_traits<char>, std::allocator<char> >] operator+(#first, _position_controller/command), [const std::locale] (default))), queue_size=2, callback='function', message_type='boost::function<void (const boost::shared_ptr<const Float64_<allocator<void> > > &)>', nesting=0, variable=None, function='init', line=84, overload='subscribe(string topic, uint32_t queue_size, void boost::function(M), VoidConstPtr, TransportHints)', transport_hints=False, param_topic=False, param_queue=False)
SubscribeTuple(topic='/joint_states', queue_size=2, callback='joint_states_callback', message_type='sensor_msgs::JointState', nesting=0, variable='joint_state_subscriber', function='EtherCATCompatibilityHand', line=50, overload='subscribe(string topic, uint32_t queue_size, void method(M), T *obj, TransportHints)', transport_hints=False, param_topic=False, param_queue=False)
SubscribeTuple(topic='twist_controller/wheel_commands', queue_size=10, callback='commandsCallback', message_type='cob_omni_drive_controller::WheelCommands', nesting=0, variable='status_sub', function='main', line=54, overload='subscribe(string topic, uint32_t queue_size, void function(M), TransportHints)', transport_hints=False, param_topic=False, param_queue=False)
SubscribeTuple(topic='cmd_vel', queue_size=1, callback='twist_callback', message_type='geometry_msgs::Twist', nesting=0, variable='sub_', function='MotionGenerator', line=43, overload='subscribe(string topic, uint32_t queue_size, void method(M), T *obj, TransportHints)', transport_hints=False, param_topic=False, param_queue=False)
SubscribeTuple(topic='/summit_xl/joint_states', queue_size=1, callback='jointStateCallback', message_type='sensor_msgs::JointState', nesting=0, variable='joint_state_sub_', function='SummitXLControllerClass', line=348, overload='subscribe(string topic, uint32_t queue_size, void method(M), T *obj, TransportHints)', transport_hints=False, param_topic=False, param_queue=False)
SubscribeTuple(topic='/imu_data', queue_size=1, callback='imuCallback', message_type='sensor_msgs::Imu', nesting=0, variable='imu_sub_', function='SummitXLControllerClass', line=352, overload='subscribe(string topic, uint32_t queue_size, void method(M), T *obj, TransportHints)', transport_hints=False, param_topic=False, param_queue=False)
SubscribeTuple(topic='/summit_xl/robot_control/command', queue_size=1, callback='commandCallback', message_type='geometry_msgs::Twist', nesting=0, variable='cmd_sub_', function='SummitXLControllerClass', line=375, overload='subscribe(string topic, uint32_t queue_size, void method(M), T *obj, TransportHints)', transport_hints=False, param_topic=False, param_queue=False)
SubscribeTuple(topic='/summit_xl/robot_control/command_ptz', queue_size=1, callback='command_ptzCallback', message_type='robotnik_msgs::ptz', nesting=0, variable='ptz_sub_', function='SummitXLControllerClass', line=378, overload='subscribe(string topic, uint32_t queue_size, void method(M), T *obj, TransportHints)', transport_hints=False, param_topic=False, param_queue=False)
SubscribeTuple(topic='/summit_xl/joint_states', queue_size=1, callback='jointStateCallback', message_type='sensor_msgs::JointState', nesting=0, variable='joint_state_sub_', function='SummitXLControllerClass', line=342, overload='subscribe(string topic, uint32_t queue_size, void method(M), T *obj, TransportHints)', transport_hints=False, param_topic=False, param_queue=False)
SubscribeTuple(topic='/summit_xl/imu_data', queue_size=1, callback='imuCallback', message_type='sensor_msgs::Imu', nesting=0, variable='imu_sub_', function='SummitXLControllerClass', line=345, overload='subscribe(string topic, uint32_t queue_size, void method(M), T *obj, TransportHints)', transport_hints=False, param_topic=False, param_queue=False)
SubscribeTuple(topic='command', queue_size=1, callback='commandCallback', message_type='geometry_msgs::Twist', nesting=0, variable='cmd_sub_', function='SummitXLControllerClass', line=367, overload='subscribe(string topic, uint32_t queue_size, void method(M), T *obj, TransportHints)', transport_hints=False, param_topic=False, param_queue=False)
SubscribeTuple(topic='command_ptz', queue_size=1, callback='command_ptzCallback', message_type='robotnik_msgs::ptz', nesting=0, variable='ptz_sub_', function='SummitXLControllerClass', line=370, overload='subscribe(string topic, uint32_t queue_size, void method(M), T *obj, TransportHints)', transport_hints=False, param_topic=False, param_queue=False)
SubscribeTuple(topic='motors/encoders', queue_size=1, callback='function', message_type='boost::function<void (const boost::shared_ptr<const Drive_<allocator<void> > > &)>', nesting=0, variable='sub', function='main', line=55, overload='subscribe(string topic, uint32_t queue_size, void boost::function(M), VoidConstPtr, TransportHints)', transport_hints=False, param_topic=False, param_queue=False)
SubscribeTuple(topic=[basic_string<char, std::char_traits<char>, std::allocator<char> >] operator+(#joint_group_position_controller_name, /command), queue_size=1, callback='cmd_pos_cb', message_type='std_msgs::Float64MultiArray', nesting=1, variable='cmd_pos_sub_', function='initialize', line=145, overload='subscribe(string topic, uint32_t queue_size, void method(M), T *obj, TransportHints)', transport_hints=False, param_topic=True, param_queue=False)
SubscribeTuple(topic=[basic_string<char, std::char_traits<char>, std::allocator<char> >] operator+(#joint_group_velocity_controller_name, /command), queue_size=1, callback='cmd_vel_cb', message_type='std_msgs::Float64MultiArray', nesting=1, variable='cmd_vel_sub_', function='initialize', line=153, overload='subscribe(string topic, uint32_t queue_size, void method(M), T *obj, TransportHints)', transport_hints=False, param_topic=True, param_queue=False)
SubscribeTuple(topic='/hokuyo/scan', queue_size=10, callback='input_scan_sub_callback', message_type='sensor_msgs::LaserScan', nesting=0, variable='input_scan_sub', function='main', line=111, overload='subscribe(string topic, uint32_t queue_size, void function(M), TransportHints)', transport_hints=False, param_topic=False, param_queue=False)
SubscribeTuple(topic='command', queue_size=1, callback='topicCallbackTwistCmd', message_type='geometry_msgs::Twist', nesting=0, variable='topic_sub_CMD_pltf_twist_', function='NodeClass', line=218, overload='subscribe(string topic, uint32_t queue_size, void method(M), T *obj, TransportHints)', transport_hints=False, param_topic=False, param_queue=False)
SubscribeTuple(topic='/emergency_stop_state', queue_size=1, callback='topicCallbackEMStop', message_type='cob_msgs::EmergencyStopState', nesting=0, variable='topic_sub_EM_stop_state_', function='NodeClass', line=219, overload='subscribe(string topic, uint32_t queue_size, void method(M), T *obj, TransportHints)', transport_hints=False, param_topic=False, param_queue=False)
SubscribeTuple(topic='diagnostic', queue_size=1, callback='topicCallbackDiagnostic', message_type='diagnostic_msgs::DiagnosticStatus', nesting=0, variable='topic_sub_drive_diagnostic_', function='NodeClass', line=220, overload='subscribe(string topic, uint32_t queue_size, void method(M), T *obj, TransportHints)', transport_hints=False, param_topic=False, param_queue=False)
SubscribeTuple(topic='state', queue_size=1, callback='topicCallbackJointControllerStates', message_type='control_msgs::JointTrajectoryControllerState', nesting=0, variable='topic_sub_joint_controller_states_', function='NodeClass', line=225, overload='subscribe(string topic, uint32_t queue_size, void method(M), T *obj, TransportHints)', transport_hints=False, param_topic=False, param_queue=False)
SubscribeTuple(topic=None, queue_size=1000, callback='generalIOState_callback', message_type='sr_ronex_msgs::GeneralIOState', nesting=1, variable='sub', function='main', line=143, overload='subscribe(string topic, uint32_t queue_size, void function(M), TransportHints)', transport_hints=False, param_topic=False, param_queue=False)
SubscribeTuple(topic='command', queue_size=1, callback='topicCallbackTwistCmd', message_type='geometry_msgs::Twist', nesting=0, variable='twist_subscriber_', function='init', line=52, overload='subscribe(string topic, uint32_t queue_size, void method(M), T *obj, TransportHints)', transport_hints=False, param_topic=False, param_queue=False)
SubscribeTuple(topic='joint_group_velocity_controller/command', queue_size=1, callback='topicCallback_setVelocitiesRaw', message_type='std_msgs::Float64MultiArrayPtr', nesting=0, variable='subSetVelocitiesRaw_', function='init', line=209, overload='subscribe(string topic, uint32_t queue_size, void method(M), T *obj, TransportHints)', transport_hints=False, param_topic=False, param_queue=False)
SubscribeTuple(topic='SModelRobotInput', queue_size=10, callback='callback', message_type='robotiq_s_model_control::SModel_robot_input', nesting=0, variable='joint_sub', function='main', line=200, overload='subscribe(string topic, uint32_t queue_size, void method(M), T *obj, TransportHints)', transport_hints=False, param_topic=False, param_queue=False)
SubscribeTuple(topic='enable', queue_size=10, callback='enableCB', message_type='std_msgs::Empty', nesting=0, variable='enable_controller_subscriber_', function='init', line=77, overload='subscribe(string topic, uint32_t queue_size, void method(M), T *obj, TransportHints)', transport_hints=False, param_topic=False, param_queue=False)
SubscribeTuple(topic='disable', queue_size=10, callback='disableCB', message_type='std_msgs::Empty', nesting=0, variable='disable_controller_subscriber_', function='init', line=78, overload='subscribe(string topic, uint32_t queue_size, void method(M), T *obj, TransportHints)', transport_hints=False, param_topic=False, param_queue=False)
SubscribeTuple(topic='events/bumper', queue_size=10, callback='bumperEventCB', message_type='kobuki_msgs::BumperEvent', nesting=0, variable='bumper_event_subscriber_', function='init', line=79, overload='subscribe(string topic, uint32_t queue_size, void method(M), T *obj, TransportHints)', transport_hints=False, param_topic=False, param_queue=False)
SubscribeTuple(topic='/scan', queue_size=1000, callback='update', message_type='sensor_msgs::LaserScan', nesting=0, variable='scan_sub_', function='LaserFootprintFilter', line=47, overload='subscribe(string topic, uint32_t queue_size, void method(M), T *obj, TransportHints)', transport_hints=False, param_topic=False, param_queue=False)
SubscribeTuple(topic=[std::string] #input, queue_size=[unsigned int] #nb_mvt_step, callback='sr_calculateErrorCallback', message_type='sr_robot_msgs::JointControllerState', nesting=1, variable='sub_', function='subscribe_and_default_pub_', line=89, overload='subscribe(string topic, uint32_t queue_size, void method(M), T *obj, TransportHints)', transport_hints=False, param_topic=False, param_queue=False)
SubscribeTuple(topic=[std::string] #input, queue_size=[unsigned int] #nb_mvt_step, callback='calculateErrorCallback', message_type='control_msgs::JointControllerState', nesting=1, variable='sub_', function='subscribe_and_default_pub_', line=94, overload='subscribe(string topic, uint32_t queue_size, void method(M), T *obj, TransportHints)', transport_hints=False, param_topic=False, param_queue=False)
SubscribeTuple(topic=[std::string] #input, queue_size=[unsigned int] #nb_mvt_step, callback='sr_calculateErrorCallback', message_type='sr_robot_msgs::JointControllerState', nesting=1, variable='sub_', function='subscribe_and_default_pub_', line=89, overload='subscribe(string topic, uint32_t queue_size, void method(M), T *obj, TransportHints)', transport_hints=False, param_topic=False, param_queue=False)
SubscribeTuple(topic=[std::string] #input, queue_size=[unsigned int] #nb_mvt_step, callback='calculateErrorCallback', message_type='control_msgs::JointControllerState', nesting=1, variable='sub_', function='subscribe_and_default_pub_', line=94, overload='subscribe(string topic, uint32_t queue_size, void method(M), T *obj, TransportHints)', transport_hints=False, param_topic=False, param_queue=False)
SubscribeTuple(topic='commands/velocity', queue_size=10, callback='subscribeVelocityCommand', message_type='geometry_msgs::Twist', nesting=0, variable='velocity_command_subscriber', function='subscribeTopics', line=337, overload='subscribe(string topic, uint32_t queue_size, void method(M), T *obj, TransportHints)', transport_hints=False, param_topic=False, param_queue=False)
SubscribeTuple(topic='commands/led1', queue_size=10, callback='subscribeLed1Command', message_type='kobuki_msgs::Led', nesting=0, variable='led1_command_subscriber', function='subscribeTopics', line=338, overload='subscribe(string topic, uint32_t queue_size, void method(M), T *obj, TransportHints)', transport_hints=False, param_topic=False, param_queue=False)
SubscribeTuple(topic='commands/led2', queue_size=10, callback='subscribeLed2Command', message_type='kobuki_msgs::Led', nesting=0, variable='led2_command_subscriber', function='subscribeTopics', line=339, overload='subscribe(string topic, uint32_t queue_size, void method(M), T *obj, TransportHints)', transport_hints=False, param_topic=False, param_queue=False)
SubscribeTuple(topic='commands/digital_output', queue_size=10, callback='subscribeDigitalOutputCommand', message_type='kobuki_msgs::DigitalOutput', nesting=0, variable='digital_output_command_subscriber', function='subscribeTopics', line=340, overload='subscribe(string topic, uint32_t queue_size, void method(M), T *obj, TransportHints)', transport_hints=False, param_topic=False, param_queue=False)
SubscribeTuple(topic='commands/external_power', queue_size=10, callback='subscribeExternalPowerCommand', message_type='kobuki_msgs::ExternalPower', nesting=0, variable='external_power_command_subscriber', function='subscribeTopics', line=341, overload='subscribe(string topic, uint32_t queue_size, void method(M), T *obj, TransportHints)', transport_hints=False, param_topic=False, param_queue=False)
SubscribeTuple(topic='commands/sound', queue_size=10, callback='subscribeSoundCommand', message_type='kobuki_msgs::Sound', nesting=0, variable='sound_command_subscriber', function='subscribeTopics', line=342, overload='subscribe(string topic, uint32_t queue_size, void method(M), T *obj, TransportHints)', transport_hints=False, param_topic=False, param_queue=False)
SubscribeTuple(topic='commands/reset_odometry', queue_size=10, callback='subscribeResetOdometry', message_type='std_msgs::Empty', nesting=0, variable='reset_odometry_subscriber', function='subscribeTopics', line=343, overload='subscribe(string topic, uint32_t queue_size, void method(M), T *obj, TransportHints)', transport_hints=False, param_topic=False, param_queue=False)
SubscribeTuple(topic='commands/motor_power', queue_size=10, callback='subscribeMotorPower', message_type='kobuki_msgs::MotorPower', nesting=0, variable='motor_power_subscriber', function='subscribeTopics', line=344, overload='subscribe(string topic, uint32_t queue_size, void method(M), T *obj, TransportHints)', transport_hints=False, param_topic=False, param_queue=False)
SubscribeTuple(topic='commands/controller_info', queue_size=10, callback='subscribeControllerInfoCommand', message_type='kobuki_msgs::ControllerInfo', nesting=0, variable='controller_info_command_subscriber', function='subscribeTopics', line=345, overload='subscribe(string topic, uint32_t queue_size, void method(M), T *obj, TransportHints)', transport_hints=False, param_topic=False, param_queue=False)
SubscribeTuple(topic='tra_point', queue_size=1000, callback='chatterCallback', message_type='aubo_msgs::TraPoint', nesting=0, variable='sub', function='main', line=116, overload='subscribe(string topic, uint32_t queue_size, void function(M), TransportHints)', transport_hints=False, param_topic=False, param_queue=False)
SubscribeTuple(topic='send_goal', queue_size=1000, callback='chatterCallback1', message_type='aubo_msgs::GoalPoint', nesting=0, variable='sub1', function='main', line=117, overload='subscribe(string topic, uint32_t queue_size, void function(M), TransportHints)', transport_hints=False, param_topic=False, param_queue=False)
SubscribeTuple(topic='/camera/rgb/camera_info', queue_size=1, callback='infoCallback', message_type='sensor_msgs::CameraInfo', nesting=0, variable='info_sub_', function='CalibrateKinectCheckerboard', line=154, overload='subscribe(string topic, uint32_t queue_size, void method(M), T *obj, TransportHints)', transport_hints=False, param_topic=False, param_queue=False)
SubscribeTuple(topic='/camera/rgb/image_mono', queue_size=1, callback='imageCallback', message_type='sensor_msgs::Image', nesting=0, variable='image_sub_', function='infoCallback', line=185, overload='subscribe(string topic, uint32_t queue_size, void method(M), T *obj, TransportHints)', transport_hints=False, param_topic=False, param_queue=False)
SubscribeTuple(topic='send_goal', queue_size=1000, callback='chatterCallback', message_type='aubo_msgs::GoalPoint', nesting=0, variable='sub', function='main', line=182, overload='subscribe(string topic, uint32_t queue_size, void function(M), TransportHints)', transport_hints=False, param_topic=False, param_queue=False)
SubscribeTuple(topic='joint_states', queue_size=1000, callback='chatterCallback1', message_type='sensor_msgs::JointState', nesting=0, variable='sub1', function='main', line=183, overload='subscribe(string topic, uint32_t queue_size, void function(M), TransportHints)', transport_hints=False, param_topic=False, param_queue=False)
SubscribeTuple(topic='aubo_new_driver/joint_speed', queue_size=1, callback='speedInterface', message_type='trajectory_msgs::JointTrajectory::Ptr', nesting=1, variable='speed_sub_', function='RosWrapper', line=157, overload='subscribe(string topic, uint32_t queue_size, void method(M), T *obj, TransportHints)', transport_hints=False, param_topic=False, param_queue=False)
SubscribeTuple(topic='aubo_new_driver/aubo_script', queue_size=1, callback='scriptInterface', message_type='std_msgs::String', nesting=1, variable='script_sub_', function='RosWrapper', line=160, overload='subscribe(string topic, uint32_t queue_size, void method(M), T *obj, TransportHints)', transport_hints=False, param_topic=False, param_queue=False)
SubscribeTuple(topic='movej_cmd', queue_size=1, callback='moveInterface', message_type='std_msgs::Float32MultiArray', nesting=1, variable='move_sub_', function='RosWrapper', line=163, overload='subscribe(string topic, uint32_t queue_size, void method(M), T *obj, TransportHints)', transport_hints=False, param_topic=False, param_queue=False)
SubscribeTuple(topic='joint_group_velocity_controller/command', queue_size=1, callback='topicCallback_setVelocitiesRaw', message_type='std_msgs::Float64MultiArrayPtr', nesting=0, variable='subSetVelocitiesRaw_', function='init', line=200, overload='subscribe(string topic, uint32_t queue_size, void method(M), T *obj, TransportHints)', transport_hints=False, param_topic=False, param_queue=False)
SubscribeTuple(topic='/spacenav/twist', queue_size=1, callback='twistSpacenavCallback', message_type='geometry_msgs::Twist', nesting=0, variable='twist_spacenav_sub_', function='SpacenavCommander', line=41, overload='subscribe(string topic, uint32_t queue_size, void method(M), T *obj, TransportHints)', transport_hints=False, param_topic=False, param_queue=False)
SubscribeTuple(topic='/spacenav/joy', queue_size=1, callback='joySpacenavCallback', message_type='sensor_msgs::Joy', nesting=0, variable='joy_spacenav_sub_', function='SpacenavCommander', line=42, overload='subscribe(string topic, uint32_t queue_size, void method(M), T *obj, TransportHints)', transport_hints=False, param_topic=False, param_queue=False)
SubscribeTuple(topic=[const std::string] #SUB_UPDATE_AR_PAIRS, queue_size=1, callback='updateARPairsCB', message_type='yocs_msgs::ARPairList', nesting=0, variable='sub_update_ar_pairs_', function='init', line=32, overload='subscribe(string topic, uint32_t queue_size, void method(M), T *obj, TransportHints)', transport_hints=False, param_topic=False, param_queue=False)
SubscribeTuple(topic=[std::string] #odom_topic_, queue_size=1, callback='OdomCallback', message_type='nav_msgs::Odometry', nesting=0, variable='odom_sub_', function='ROSSetup', line=815, overload='subscribe(string topic, uint32_t queue_size, void method(M), T *obj, TransportHints)', transport_hints=False, param_topic=True, param_queue=False)
SubscribeTuple(topic='waypoints', queue_size=1, callback='waypointsCB', message_type='yocs_msgs::WaypointList', nesting=0, variable='waypoints_sub_', function='init', line=48, overload='subscribe(string topic, uint32_t queue_size, void method(M), T *obj, TransportHints)', transport_hints=False, param_topic=False, param_queue=False)
SubscribeTuple(topic='trajectories', queue_size=1, callback='trajectoriesCB', message_type='yocs_msgs::TrajectoryList', nesting=0, variable='trajectories_sub_', function='init', line=49, overload='subscribe(string topic, uint32_t queue_size, void method(M), T *obj, TransportHints)', transport_hints=False, param_topic=False, param_queue=False)
SubscribeTuple(topic='nav_ctrl', queue_size=1, callback='navCtrlCB', message_type='yocs_msgs::NavigationControl', nesting=0, variable='nav_ctrl_sub_', function='init', line=50, overload='subscribe(string topic, uint32_t queue_size, void method(M), T *obj, TransportHints)', transport_hints=False, param_topic=False, param_queue=False)
SubscribeTuple(topic=[std::string] #full_topic, queue_size=10, callback='jointstatesCallback', message_type='sensor_msgs::JointState', nesting=0, variable='cyberglove_jointstates_sub', function='ShadowhandToCybergloveRemapper', line=66, overload='subscribe(string topic, uint32_t queue_size, void method(M), T *obj, TransportHints)', transport_hints=False, param_topic=False, param_queue=False)
SubscribeTuple(topic=[std::string] #full_topic, queue_size=10, callback='jointstatesCallback', message_type='sensor_msgs::JointState', nesting=0, variable='cyberglove_jointstates_sub', function='ShadowhandToCybergloveRemapper', line=66, overload='subscribe(string topic, uint32_t queue_size, void method(M), T *obj, TransportHints)', transport_hints=False, param_topic=False, param_queue=False)
SubscribeTuple(topic='sent_messages', queue_size=10, callback='function', message_type='boost::function<void (const boost::shared_ptr<const Frame_<allocator<void> > > &)>', nesting=0, variable='can_topic_', function='TopicToSocketCAN', line=37, overload='subscribe(string topic, uint32_t queue_size, void boost::function(M), VoidConstPtr, TransportHints)', transport_hints=False, param_topic=False, param_queue=False)
SubscribeTuple(topic='/summit/joint_states', queue_size=1, callback='jointStateCallback', message_type='sensor_msgs::JointState', nesting=0, variable='joint_state_sub_', function='SummitControllerClass', line=314, overload='subscribe(string topic, uint32_t queue_size, void method(M), T *obj, TransportHints)', transport_hints=False, param_topic=False, param_queue=False)
SubscribeTuple(topic='/summit/imu_data', queue_size=1, callback='imuCallback', message_type='sensor_msgs::Imu', nesting=0, variable='imu_sub_', function='SummitControllerClass', line=317, overload='subscribe(string topic, uint32_t queue_size, void method(M), T *obj, TransportHints)', transport_hints=False, param_topic=False, param_queue=False)
SubscribeTuple(topic='command', queue_size=1, callback='commandCallback', message_type='ackermann_msgs::AckermannDriveStamped', nesting=0, variable='cmd_sub_', function='SummitControllerClass', line=334, overload='subscribe(string topic, uint32_t queue_size, void method(M), T *obj, TransportHints)', transport_hints=False, param_topic=False, param_queue=False)
SubscribeTuple(topic='command_ptz', queue_size=1, callback='command_ptzCallback', message_type='robotnik_msgs::ptz', nesting=0, variable='ptz_sub_', function='SummitControllerClass', line=337, overload='subscribe(string topic, uint32_t queue_size, void method(M), T *obj, TransportHints)', transport_hints=False, param_topic=False, param_queue=False)
SubscribeTuple(topic='pointcloud_in', queue_size=1, callback='pcCallback', message_type='sensor_msgs::PointCloud2', nesting=1, variable='point_cloud_sub_', function='pcConnectCB', line=600, overload='subscribe(string topic, uint32_t queue_size, void method(M), T *obj, TransportHints)', transport_hints=False, param_topic=False, param_queue=False)
SubscribeTuple(topic='disparityimage_in', queue_size=1, callback='disparityCallback', message_type='stereo_msgs::DisparityImage', nesting=1, variable='disparity_image_sub_', function='disparityConnectCB', line=756, overload='subscribe(string topic, uint32_t queue_size, void method(M), T *obj, TransportHints)', transport_hints=False, param_topic=False, param_queue=False)
SubscribeTuple(topic='pointcloud_in', queue_size=1, callback='pcCallback', message_type='sensor_msgs::PointCloud2', nesting=1, variable='point_cloud_sub_', function='pcConnectCB', line=600, overload='subscribe(string topic, uint32_t queue_size, void method(M), T *obj, TransportHints)', transport_hints=False, param_topic=False, param_queue=False)
SubscribeTuple(topic='disparityimage_in', queue_size=1, callback='disparityCallback', message_type='stereo_msgs::DisparityImage', nesting=1, variable='disparity_image_sub_', function='disparityConnectCB', line=756, overload='subscribe(string topic, uint32_t queue_size, void method(M), T *obj, TransportHints)', transport_hints=False, param_topic=False, param_queue=False)
SubscribeTuple(topic='send_goal', queue_size=1000, callback='chatterCallback', message_type='std_msgs::Float32MultiArray', nesting=0, variable='sub', function='main', line=263, overload='subscribe(string topic, uint32_t queue_size, void function(M), TransportHints)', transport_hints=False, param_topic=False, param_queue=False)
SubscribeTuple(topic='enable', queue_size=10, callback='enableCB', message_type='std_msgs::Empty', nesting=0, variable='enable_controller_subscriber_', function='init', line=104, overload='subscribe(string topic, uint32_t queue_size, void method(M), T *obj, TransportHints)', transport_hints=False, param_topic=False, param_queue=False)
SubscribeTuple(topic='disable', queue_size=10, callback='disableCB', message_type='std_msgs::Empty', nesting=0, variable='disable_controller_subscriber_', function='init', line=105, overload='subscribe(string topic, uint32_t queue_size, void method(M), T *obj, TransportHints)', transport_hints=False, param_topic=False, param_queue=False)
SubscribeTuple(topic='events/bumper', queue_size=10, callback='bumperEventCB', message_type='kobuki_msgs::BumperEvent', nesting=0, variable='bumper_event_subscriber_', function='init', line=106, overload='subscribe(string topic, uint32_t queue_size, void method(M), T *obj, TransportHints)', transport_hints=False, param_topic=False, param_queue=False)
SubscribeTuple(topic='events/cliff', queue_size=10, callback='cliffEventCB', message_type='kobuki_msgs::CliffEvent', nesting=0, variable='cliff_event_subscriber_', function='init', line=107, overload='subscribe(string topic, uint32_t queue_size, void method(M), T *obj, TransportHints)', transport_hints=False, param_topic=False, param_queue=False)
SubscribeTuple(topic='events/wheel_drop', queue_size=10, callback='wheelEventCB', message_type='kobuki_msgs::WheelDropEvent', nesting=0, variable='wheel_event_subscriber_', function='init', line=108, overload='subscribe(string topic, uint32_t queue_size, void method(M), T *obj, TransportHints)', transport_hints=False, param_topic=False, param_queue=False)
SubscribeTuple(topic='reset', queue_size=10, callback='resetSafetyStatesCB', message_type='std_msgs::Empty', nesting=0, variable='reset_safety_states_subscriber_', function='init', line=109, overload='subscribe(string topic, uint32_t queue_size, void method(M), T *obj, TransportHints)', transport_hints=False, param_topic=False, param_queue=False)
SubscribeTuple(topic='joint_states', queue_size=1, callback='jointstateCb', message_type='sensor_msgs::JointState', nesting=0, variable='jointstate_sub', function='main', line=61, overload='subscribe(string topic, uint32_t queue_size, void method(M), T *obj, TransportHints)', transport_hints=False, param_topic=False, param_queue=False)
SubscribeTuple(topic='obstacle_distance/registerObstacle', queue_size=1, callback='registerObstacle', message_type='moveit_msgs::CollisionObject', nesting=0, variable='obstacle_sub', function='main', line=62, overload='subscribe(string topic, uint32_t queue_size, void method(M), T *obj, TransportHints)', transport_hints=False, param_topic=False, param_queue=False)
SubscribeTuple(topic='/turtlebot_blocks', queue_size=1, callback='addBlocks', message_type='geometry_msgs::PoseArray', nesting=0, variable='block_sub_', function='InteractiveManipulationServer', line=88, overload='subscribe(string topic, uint32_t queue_size, void method(M), T *obj, TransportHints)', transport_hints=False, param_topic=False, param_queue=False)
SubscribeTuple(topic='/camera/depth_registered/points', queue_size=1, callback='cloudCb', message_type='sensor_msgs::PointCloud2', nesting=0, variable='sub_', function='BlockDetectionServer', line=99, overload='subscribe(string topic, uint32_t queue_size, void method(M), T *obj, TransportHints)', transport_hints=False, param_topic=False, param_queue=False)
SubscribeTuple(topic='cmd', queue_size=1, callback='cmdCallback', message_type='roboteq_msgs::Command', nesting=0, variable='sub_cmd_', function='Channel', line=40, overload='subscribe(string topic, uint32_t queue_size, void method(M), T *obj, TransportHints)', transport_hints=False, param_topic=False, param_queue=False)
SubscribeTuple(topic='core_sensors', queue_size=10, callback='coreSensorCB', message_type='kobuki_msgs::SensorState', nesting=0, variable='core_sensor_sub_', function='onInit', line=132, overload='subscribe(string topic, uint32_t queue_size, void method(M), T *obj, TransportHints)', transport_hints=False, param_topic=False, param_queue=False)
SubscribeTuple(topic='feedback', queue_size=1, callback='feedbackCallback', message_type='roboteq_msgs::Feedback', nesting=0, variable='sub_feedback_', function='RoboteqInterface', line=50, overload='subscribe(string topic, uint32_t queue_size, void method(M), T *obj, TransportHints)', transport_hints=False, param_topic=False, param_queue=False)
SubscribeTuple(topic='cmd_drive', queue_size=1, callback='driveCallback', message_type='grizzly_msgs::Drive', nesting=0, variable='sub_drive_', function='MotorFanout', line=175, overload='subscribe(string topic, uint32_t queue_size, void method(M), T *obj, TransportHints)', transport_hints=False, param_topic=False, param_queue=False)
SubscribeTuple(topic='command', queue_size=1, callback='setCommandCB', message_type='sr_robot_msgs::JointMuscleValveControllerCommand', nesting=0, variable='sub_command_', function='init', line=121, overload='subscribe(string topic, uint32_t queue_size, void method(M), T *obj, TransportHints)', transport_hints=False, param_topic=False, param_queue=False)
SubscribeTuple(topic='command', queue_size=1, callback='setCommandCB', message_type='std_msgs::Float64', nesting=0, variable='sub_command_', function='after_init', line=91, overload='subscribe(string topic, uint32_t queue_size, void method(M), T *obj, TransportHints)', transport_hints=False, param_topic=False, param_queue=False)
SubscribeTuple(topic='max_force_factor', queue_size=1, callback='maxForceFactorCB', message_type='std_msgs::Float64', nesting=0, variable='sub_max_force_factor_', function='after_init', line=92, overload='subscribe(string topic, uint32_t queue_size, void method(M), T *obj, TransportHints)', transport_hints=False, param_topic=False, param_queue=False)
SubscribeTuple(topic='odometry/filtered', queue_size=1, callback='odomCallback', message_type='nav_msgs::Odometry', nesting=0, variable='odomSub', function='run', line=357, overload='subscribe(string topic, uint32_t queue_size, void method(M), T *obj, TransportHints)', transport_hints=False, param_topic=False, param_queue=False)
SubscribeTuple(topic='gps/fix', queue_size=1, callback='gpsFixCallback', message_type='sensor_msgs::NavSatFix', nesting=0, variable='gpsSub', function='run', line=358, overload='subscribe(string topic, uint32_t queue_size, void method(M), T *obj, TransportHints)', transport_hints=False, param_topic=False, param_queue=False)
SubscribeTuple(topic='imu/data', queue_size=1, callback='imuCallback', message_type='sensor_msgs::Imu', nesting=0, variable='imuSub', function='run', line=359, overload='subscribe(string topic, uint32_t queue_size, void method(M), T *obj, TransportHints)', transport_hints=False, param_topic=False, param_queue=False)
SubscribeTuple(topic=[std::string] #localOdomTopic_, queue_size=1, callback='localOdomCallback', message_type='nav_msgs::Odometry', nesting=0, variable='localOdomSub', function='run', line=361, overload='subscribe(string topic, uint32_t queue_size, void method(M), T *obj, TransportHints)', transport_hints=False, param_topic=True, param_queue=False)
SubscribeTuple(topic='odometry', queue_size=1, callback='odometryCB', message_type='nav_msgs::Odometry', nesting=0, variable='odometry_sub', function='init', line=343, overload='subscribe(string topic, uint32_t queue_size, void method(M), T *obj, TransportHints)', transport_hints=False, param_topic=False, param_queue=False)
SubscribeTuple(topic='robot_cmd_vel', queue_size=1, callback='robotVelCB', message_type='geometry_msgs::Twist', nesting=0, variable='current_vel_sub', function='init', line=344, overload='subscribe(string topic, uint32_t queue_size, void method(M), T *obj, TransportHints)', transport_hints=False, param_topic=False, param_queue=False)
SubscribeTuple(topic='raw_cmd_vel', queue_size=1, callback='velocityCB', message_type='geometry_msgs::Twist', nesting=0, variable='raw_in_vel_sub', function='init', line=345, overload='subscribe(string topic, uint32_t queue_size, void method(M), T *obj, TransportHints)', transport_hints=False, param_topic=False, param_queue=False)
SubscribeTuple(topic='output', queue_size=1, callback='function', message_type='boost::function<void (const boost::shared_ptr<const SModel_robot_output_<allocator<void> > > &)>', nesting=0, variable='sub', function='main', line=65, overload='subscribe(string topic, uint32_t queue_size, void boost::function(M), VoidConstPtr, TransportHints)', transport_hints=False, param_topic=False, param_queue=False)
SubscribeTuple(topic='global_markers', queue_size=1, callback='globalMarkersCB', message_type='ar_track_alvar_msgs::AlvarMarkers', nesting=0, variable='sub_global_marker_', function='ARPairTrackingClient', line=14, overload='subscribe(string topic, uint32_t queue_size, void method(M), T *obj, TransportHints)', transport_hints=False, param_topic=False, param_queue=False)
SubscribeTuple(topic='input', queue_size=1, callback='analysisCB', message_type='GripperInput', nesting=0, variable='state_sub_', function='CModelGripperActionServer', line=101, overload='subscribe(string topic, uint32_t queue_size, void method(M), T *obj, TransportHints)', transport_hints=False, param_topic=False, param_queue=False)
SubscribeTuple(topic='in/joint_velocity', queue_size=1, callback='jointVelocityCallback', message_type='kinova_msgs::JointVelocity', nesting=0, variable='joint_velocity_subscriber_', function='KinovaArm', line=142, overload='subscribe(string topic, uint32_t queue_size, void method(M), T *obj, TransportHints)', transport_hints=False, param_topic=False, param_queue=False)
SubscribeTuple(topic='in/cartesian_velocity', queue_size=1, callback='cartesianVelocityCallback', message_type='kinova_msgs::PoseVelocity', nesting=0, variable='cartesian_velocity_subscriber_', function='KinovaArm', line=144, overload='subscribe(string topic, uint32_t queue_size, void method(M), T *obj, TransportHints)', transport_hints=False, param_topic=False, param_queue=False)
SubscribeTuple(topic=[basic_string<char, std::char_traits<char>, std::allocator<char> >] operator+([basic_string<char, std::char_traits<char>, std::allocator<char> >] operator+(/, #tf_prefix_), _driver/out/joint_command), queue_size=1, callback='currentJointsFeedback', message_type='kinova_msgs::JointAngles', nesting=0, variable='armJoint_sub', function='main', line=488, overload='subscribe(string topic, uint32_t queue_size, void function(M), TransportHints)', transport_hints=False, param_topic=False, param_queue=False)
SubscribeTuple(topic=[basic_string<char, std::char_traits<char>, std::allocator<char> >] operator+([basic_string<char, std::char_traits<char>, std::allocator<char> >] operator+(/, #tf_prefix_), _driver/out/cartesian_command), queue_size=1, callback='currentPoseFeedback', message_type='kinova_msgs::KinovaPose', nesting=0, variable='armCartesian_sub', function='main', line=489, overload='subscribe(string topic, uint32_t queue_size, void function(M), TransportHints)', transport_hints=False, param_topic=False, param_queue=False)
SubscribeTuple(topic='in/joint_angles', queue_size=1, callback='jointAnglesMsgHandler', message_type='kinova_msgs::JointAngles', nesting=0, variable='joint_angles_subscriber_', function='KinovaTFTree', line=18, overload='subscribe(string topic, uint32_t queue_size, void method(M), T *obj, TransportHints)', transport_hints=False, param_topic=False, param_queue=False)
SubscribeTuple(topic='enable', queue_size=10, callback='enableCB', message_type='std_msgs::Empty', nesting=0, variable='enable_controller_subscriber_', function='init', line=50, overload='subscribe(string topic, uint32_t queue_size, void method(M), T *obj, TransportHints)', transport_hints=False, param_topic=False, param_queue=False)
SubscribeTuple(topic='disable', queue_size=10, callback='disableCB', message_type='std_msgs::Empty', nesting=0, variable='disable_controller_subscriber_', function='init', line=51, overload='subscribe(string topic, uint32_t queue_size, void method(M), T *obj, TransportHints)', transport_hints=False, param_topic=False, param_queue=False)
SubscribeTuple(topic='rangers', queue_size=10, callback='rangerCB', message_type='sensor_msgs::Range', nesting=0, variable='ranger_subscriber_', function='init', line=52, overload='subscribe(string topic, uint32_t queue_size, void method(M), T *obj, TransportHints)', transport_hints=False, param_topic=False, param_queue=False)
SubscribeTuple(topic='teleop', queue_size=1, callback='remoteKeyInputReceived', message_type='kobuki_msgs::KeyboardInput', nesting=0, variable='keyinput_subscriber', function='init', line=109, overload='subscribe(string topic, uint32_t queue_size, void method(M), T *obj, TransportHints)', transport_hints=False, param_topic=False, param_queue=False)
SubscribeTuple(topic='ar_track_alvar/ar_pose_marker', queue_size=1, callback='arPoseMarkersCB', message_type='ar_track_alvar_msgs::AlvarMarkers', nesting=0, variable='sub_ar_markers_', function='init', line=43, overload='subscribe(string topic, uint32_t queue_size, void method(M), T *obj, TransportHints)', transport_hints=False, param_topic=False, param_queue=False)
SubscribeTuple(topic='diagnostics_agg', queue_size=1, callback='diagnostics_agg_cb_', message_type='diagnostic_msgs::DiagnosticArray', nesting=0, variable='diagnostic_sub_', function='run_test', line=105, overload='subscribe(string topic, uint32_t queue_size, void method(M), T *obj, TransportHints)', transport_hints=False, param_topic=False, param_queue=False)
SubscribeTuple(topic='output', queue_size=1, callback='function', message_type='boost::function<void (const boost::shared_ptr<const CModel_robot_output_<allocator<void> > > &)>', nesting=0, variable='sub', function='main', line=65, overload='subscribe(string topic, uint32_t queue_size, void boost::function(M), VoidConstPtr, TransportHints)', transport_hints=False, param_topic=False, param_queue=False)
SubscribeTuple(topic='pcan_cmd', queue_size=1000, callback='chatterCallback', message_type='std_msgs::Float32MultiArray', nesting=0, variable='cmd_sub', function='main', line=120, overload='subscribe(string topic, uint32_t queue_size, void function(M), TransportHints)', transport_hints=False, param_topic=False, param_queue=False)
SubscribeTuple(topic='joint_states', queue_size=1000, callback='chatterCallback1', message_type='sensor_msgs::JointState', nesting=0, variable='sub1', function='main', line=32, overload='subscribe(string topic, uint32_t queue_size, void function(M), TransportHints)', transport_hints=False, param_topic=False, param_queue=False)
SubscribeTuple(topic='current_pos', queue_size=1000, callback='chatterCallback1', message_type='aubo_msgs::JointPos', nesting=0, variable='sub1', function='main', line=27, overload='subscribe(string topic, uint32_t queue_size, void function(M), TransportHints)', transport_hints=False, param_topic=False, param_queue=False)
SubscribeTuple(topic='joint_trajectory_controller/state', queue_size=1, callback='state_callback', message_type='control_msgs::JointTrajectoryControllerStatePtr', nesting=0, variable='controller_state_', function='cob_trajectory_controller_node', line=118, overload='subscribe(string topic, uint32_t queue_size, void method(M), T *obj, TransportHints)', transport_hints=False, param_topic=False, param_queue=False)
SubscribeTuple(topic='driver/current_operationmode', queue_size=1, callback='operationmode_callback', message_type='std_msgs::StringPtr', nesting=0, variable='operation_mode_', function='cob_trajectory_controller_node', line=119, overload='subscribe(string topic, uint32_t queue_size, void method(M), T *obj, TransportHints)', transport_hints=False, param_topic=False, param_queue=False)
SubscribeTuple(topic='joint_group_position_controller/command', queue_size=1, callback='topicCallback_CommandPos', message_type='std_msgs::Float64MultiArray', nesting=0, variable='topicSub_CommandPos_', function='PowerCubeChainNode', line=143, overload='subscribe(string topic, uint32_t queue_size, void method(M), T *obj, TransportHints)', transport_hints=False, param_topic=False, param_queue=False)
SubscribeTuple(topic='joint_group_velocity_controller/command', queue_size=1, callback='topicCallback_CommandVel', message_type='std_msgs::Float64MultiArray', nesting=0, variable='topicSub_CommandVel_', function='PowerCubeChainNode', line=144, overload='subscribe(string topic, uint32_t queue_size, void method(M), T *obj, TransportHints)', transport_hints=False, param_topic=False, param_queue=False)
SubscribeTuple(topic=[std::string] ([yocs_cmd_vel_mux::CmdVelSubscribers::CmdVelSubs] operator[](#cmd_vel_sub, #i)).topic, queue_size=10, callback='function', message_type='boost::function<void (const boost::shared_ptr<const Twist_<allocator<void> > > &)>', nesting=1, variable='subs', function='reloadConfiguration', line=162, overload='subscribe(string topic, uint32_t queue_size, void boost::function(M), VoidConstPtr, TransportHints)', transport_hints=False, param_topic=False, param_queue=False)
SubscribeTuple(topic=[__string_type] sub_topic.str(), queue_size=1, callback='function', message_type='boost::function<void (const boost::shared_ptr<const Bool_<allocator<void> > > &)>', nesting=0, variable=None, function='init', line=98, overload='subscribe(string topic, uint32_t queue_size, void boost::function(M), VoidConstPtr, TransportHints)', transport_hints=False, param_topic=False, param_queue=False)
SubscribeTuple(topic=[__string_type] sub_topic.str(), queue_size=1, callback='function', message_type='boost::function<void (const boost::shared_ptr<const Bool_<allocator<void> > > &)>', nesting=0, variable=None, function='init', line=99, overload='subscribe(string topic, uint32_t queue_size, void boost::function(M), VoidConstPtr, TransportHints)', transport_hints=False, param_topic=False, param_queue=False)
SubscribeTuple(topic=[__string_type] sub_topic.str(), queue_size=1, callback='function', message_type='boost::function<void (const boost::shared_ptr<const MotorPacketCommand_<allocator<void> > > &)>', nesting=0, variable=None, function='init', line=109, overload='subscribe(string topic, uint32_t queue_size, void boost::function(M), VoidConstPtr, TransportHints)', transport_hints=False, param_topic=False, param_queue=False)
SubscribeTuple(topic=[__string_type] sub_topic.str(), queue_size=1, callback='function', message_type='boost::function<void (const boost::shared_ptr<const Bool_<allocator<void> > > &)>', nesting=0, variable=None, function='init', line=98, overload='subscribe(string topic, uint32_t queue_size, void boost::function(M), VoidConstPtr, TransportHints)', transport_hints=False, param_topic=False, param_queue=False)
SubscribeTuple(topic=[__string_type] sub_topic.str(), queue_size=1, callback='function', message_type='boost::function<void (const boost::shared_ptr<const PWM_<allocator<void> > > &)>', nesting=0, variable=None, function='init', line=108, overload='subscribe(string topic, uint32_t queue_size, void boost::function(M), VoidConstPtr, TransportHints)', transport_hints=False, param_topic=False, param_queue=False)
SubscribeTuple(topic=[std::string] #command_topic_, queue_size=1, callback='cmdVelCallback', message_type='geometry_msgs::Twist', nesting=0, variable='cmd_vel_subscriber_', function='initController', line=229, overload='subscribe(string topic, uint32_t queue_size, void method(M), T *obj, TransportHints)', transport_hints=False, param_topic=False, param_queue=False)
SubscribeTuple(topic='command', queue_size=1, callback='commandCB', message_type='trajectory_msgs::JointTrajectory', nesting=0, variable='command_sub', function='JointTrajectoryActionController', line=234, overload='subscribe(string topic, uint32_t queue_size, void method(M), T *obj, TransportHints)', transport_hints=False, param_topic=False, param_queue=False)
SubscribeTuple(topic='mse_out', queue_size=1, callback='mse_cb_', message_type='std_msgs::Float64', nesting=0, variable='mse_sub_', function='TestJointMovement', line=42, overload='subscribe(string topic, uint32_t queue_size, void method(M), T *obj, TransportHints)', transport_hints=False, param_topic=False, param_queue=False)
SubscribeTuple(topic=[std::string] operator->.get_subscriber_topic(), queue_size=[unsigned int] #nb_mvt_step, callback='sr_state_cb_', message_type='sr_robot_msgs::JointControllerState', nesting=1, variable='sr_sub_state_', function='TestJointMovement', line=80, overload='subscribe(string topic, uint32_t queue_size, void method(M), T *obj, TransportHints)', transport_hints=False, param_topic=False, param_queue=False)
SubscribeTuple(topic=[std::string] operator->.get_subscriber_topic(), queue_size=[unsigned int] #nb_mvt_step, callback='state_cb_', message_type='control_msgs::JointControllerState', nesting=1, variable='sub_state_', function='TestJointMovement', line=85, overload='subscribe(string topic, uint32_t queue_size, void method(M), T *obj, TransportHints)', transport_hints=False, param_topic=False, param_queue=False)
SubscribeTuple(topic='joint_states', queue_size=50, callback='joint_states_cb_', message_type='sensor_msgs::JointState', nesting=0, variable='joint_states_sub_', function='test_sensor_noise', line=49, overload='subscribe(string topic, uint32_t queue_size, void method(M), T *obj, TransportHints)', transport_hints=False, param_topic=False, param_queue=False)
SubscribeTuple(topic='diagnostics_agg', queue_size=1, callback='diagnostics_agg_cb_', message_type='diagnostic_msgs::DiagnosticArray', nesting=0, variable='diag_sub_', function='run_tests_', line=47, overload='subscribe(string topic, uint32_t queue_size, void method(M), T *obj, TransportHints)', transport_hints=False, param_topic=False, param_queue=False)
SubscribeTuple(topic='/scan_unified', queue_size=1, callback='scan_callback', message_type='sensor_msgs::LaserScan', nesting=0, variable='sub_scan', function='DistApproxMode', line=23, overload='subscribe(string topic, uint32_t queue_size, void method(M), T *obj, TransportHints)', transport_hints=False, param_topic=False, param_queue=False)
SubscribeTuple(topic='odometry', queue_size=1, callback='odometryCB', message_type='nav_msgs::Odometry', nesting=0, variable='odometry_sub', function='init', line=282, overload='subscribe(string topic, uint32_t queue_size, void method(M), T *obj, TransportHints)', transport_hints=False, param_topic=False, param_queue=False)
SubscribeTuple(topic='robot_cmd_vel', queue_size=1, callback='robotVelCB', message_type='geometry_msgs::Twist', nesting=0, variable='current_vel_sub', function='init', line=283, overload='subscribe(string topic, uint32_t queue_size, void method(M), T *obj, TransportHints)', transport_hints=False, param_topic=False, param_queue=False)
SubscribeTuple(topic='raw_cmd_vel', queue_size=1, callback='velocityCB', message_type='geometry_msgs::Twist', nesting=0, variable='raw_in_vel_sub', function='init', line=284, overload='subscribe(string topic, uint32_t queue_size, void method(M), T *obj, TransportHints)', transport_hints=False, param_topic=False, param_queue=False)
SubscribeTuple(topic='input', queue_size=1, callback='input_cb', message_type='std_msgs::Float64', nesting=0, variable='input_sub_', function='MovingAverageTester', line=14, overload='subscribe(string topic, uint32_t queue_size, void method(M), T *obj, TransportHints)', transport_hints=False, param_topic=False, param_queue=False)
SubscribeTuple(topic='feedback_states', queue_size=1, callback='controllerStateCB', message_type='control_msgs::FollowJointTrajectoryFeedback', nesting=0, variable='sub_trajectory_state_', function='JointTrajectoryAction', line=63, overload='subscribe(string topic, uint32_t queue_size, void method(M), T *obj, TransportHints)', transport_hints=False, param_topic=False, param_queue=False)
SubscribeTuple(topic='robot_status', queue_size=1, callback='robotStatusCB', message_type='industrial_msgs::RobotStatus', nesting=0, variable='sub_robot_status_', function='JointTrajectoryAction', line=64, overload='subscribe(string topic, uint32_t queue_size, void method(M), T *obj, TransportHints)', transport_hints=False, param_topic=False, param_queue=False)
SubscribeTuple(topic='joint_path_command', queue_size=0, callback='jointTrajectoryCB', message_type='trajectory_msgs::JointTrajectory', nesting=0, variable='sub_joint_trajectory_', function='init', line=106, overload='subscribe(string topic, uint32_t queue_size, void method(M), T *obj, TransportHints)', transport_hints=False, param_topic=False, param_queue=False)
SubscribeTuple(topic='joint_states', queue_size=1, callback='jointStateCB', message_type='sensor_msgs::JointState', nesting=0, variable='sub_cur_pos_', function='init', line=107, overload='subscribe(string topic, uint32_t queue_size, void method(M), T *obj, TransportHints)', transport_hints=False, param_topic=False, param_queue=False)
SubscribeTuple(topic='joint_path_command', queue_size=0, callback='jointTrajectoryCB', message_type='trajectory_msgs::JointTrajectory', nesting=0, variable='sub_joint_trajectory_', function='init', line=106, overload='subscribe(string topic, uint32_t queue_size, void method(M), T *obj, TransportHints)', transport_hints=False, param_topic=False, param_queue=False)
SubscribeTuple(topic='joint_states', queue_size=1, callback='jointStateCB', message_type='sensor_msgs::JointState', nesting=0, variable='sub_cur_pos_', function='init', line=107, overload='subscribe(string topic, uint32_t queue_size, void method(M), T *obj, TransportHints)', transport_hints=False, param_topic=False, param_queue=False)
SubscribeTuple(topic='column_pose_list', queue_size=1, callback='columnPosesCB', message_type='yocs_msgs::ColumnList', nesting=0, variable='column_poses_sub_', function='init', line=53, overload='subscribe(string topic, uint32_t queue_size, void method(M), T *obj, TransportHints)', transport_hints=False, param_topic=False, param_queue=False)
SubscribeTuple(topic='wall_pose_list', queue_size=1, callback='wallPosesCB', message_type='yocs_msgs::WallList', nesting=0, variable='wall_poses_sub_', function='init', line=54, overload='subscribe(string topic, uint32_t queue_size, void method(M), T *obj, TransportHints)', transport_hints=False, param_topic=False, param_queue=False)
SubscribeTuple(topic='input', queue_size=1, callback='input_cb', message_type='std_msgs::Float64', nesting=0, variable='input_sub_', function='SimpsonIntegratorTester', line=22, overload='subscribe(string topic, uint32_t queue_size, void method(M), T *obj, TransportHints)', transport_hints=False, param_topic=False, param_queue=False)
SubscribeTuple(topic='joint_states', queue_size=1, callback='jointstateCallback', message_type='sensor_msgs::JointState', nesting=0, variable='jointstate_sub_', function='init', line=94, overload='subscribe(string topic, uint32_t queue_size, void method(M), T *obj, TransportHints)', transport_hints=False, param_topic=False, param_queue=False)
SubscribeTuple(topic=[const _topic_type] ([typename boost::detail::sp_member_access<const PickAndPlaceGoal_<allocator<void> > >::type] operator->(#goal_)).topic, queue_size=1, callback='sendGoalFromTopic', message_type='geometry_msgs::PoseArray', nesting=1, variable='pick_and_place_sub_', function='goalCB', line=103, overload='subscribe(string topic, uint32_t queue_size, void method(M), T *obj, TransportHints)', transport_hints=False, param_topic=False, param_queue=False)
SubscribeTuple(topic='enable', queue_size=10, callback='enableCB', message_type='std_msgs::Empty', nesting=0, variable='enable_controller_subscriber_', function='init', line=70, overload='subscribe(string topic, uint32_t queue_size, void method(M), T *obj, TransportHints)', transport_hints=False, param_topic=False, param_queue=False)
SubscribeTuple(topic='disable', queue_size=10, callback='disableCB', message_type='std_msgs::Empty', nesting=0, variable='disable_controller_subscriber_', function='init', line=71, overload='subscribe(string topic, uint32_t queue_size, void method(M), T *obj, TransportHints)', transport_hints=False, param_topic=False, param_queue=False)
SubscribeTuple(topic='events/bumper', queue_size=10, callback='bumperEventCB', message_type='kobuki_msgs::BumperEvent', nesting=0, variable='bumper_event_subscriber_', function='init', line=72, overload='subscribe(string topic, uint32_t queue_size, void method(M), T *obj, TransportHints)', transport_hints=False, param_topic=False, param_queue=False)
SubscribeTuple(topic='events/cliff', queue_size=10, callback='cliffEventCB', message_type='kobuki_msgs::CliffEvent', nesting=0, variable='cliff_event_subscriber_', function='init', line=73, overload='subscribe(string topic, uint32_t queue_size, void method(M), T *obj, TransportHints)', transport_hints=False, param_topic=False, param_queue=False)
SubscribeTuple(topic='events/wheel_drop', queue_size=10, callback='wheelDropEventCB', message_type='kobuki_msgs::WheelDropEvent', nesting=0, variable='wheel_drop_event_subscriber_', function='init', line=74, overload='subscribe(string topic, uint32_t queue_size, void method(M), T *obj, TransportHints)', transport_hints=False, param_topic=False, param_queue=False)
SubscribeTuple(topic='command', queue_size=1, callback='topicCallback', message_type='cob_light::ColorRGBAArray', nesting=0, variable='_sub', function='init', line=196, overload='subscribe(string topic, uint32_t queue_size, void method(M), T *obj, TransportHints)', transport_hints=False, param_topic=False, param_queue=False)